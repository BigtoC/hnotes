name: Build and Release Android

on:
  workflow_dispatch:

jobs:
  build:
    name: Build & Release Android
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Set Up Java
        uses: actions/setup-java@v4
        with:
          distribution: 'zulu'
          java-version: '21'

      - name: Set Up Flutter
        uses: subosito/flutter-action@v2
        with:
          channel: 'stable'
          cache: true
      - run: flutter --version

      - name: Install Dependencies
        run: flutter pub get

      - name: Flutter Clean
        run: flutter clean

      - name: Extract version from pubspec.yaml
        id: extract_version
        run: |
          version=$(grep '^version:' pubspec.yaml | sed 's/version:\s*\([0-9]*\.[0-9]*\.[0-9]*.*\)/\1/' | tr -d '\r')
          echo "VERSION=$version" >> $GITHUB_ENV
          echo "Extracted version: $version"

      - name: Build APK
        run: flutter build apk --release --build-name=${{ env.VERSION }} --build-number=${{ github.run_number }}

      - name: Build App Bundle
        run: flutter build appbundle --build-name=${{ env.VERSION }} --build-number=${{ github.run_number }}

      - name: Upload Artifacts
        uses: actions/upload-artifact@v4
        with:
          name: Android-Releases
          path: |
            build/app/outputs/flutter-apk/app-release.apk
            build/app/outputs/bundle/release/app-release.aab
          retention-days: 7

      - name: Generate Release Tag
        id: tag_version
        run: |
          if [ "${{ github.event.inputs.release_type }}" == "production" ]; then
            RELEASE_TAG="v${{ env.VERSION }}"
          else
            RELEASE_TAG="v${{ env.VERSION }}-${{ github.event.inputs.release_type }}"
          fi
          echo "RELEASE_TAG=$RELEASE_TAG" >> $GITHUB_ENV

      - name: Create Release
        uses: ncipollo/release-action@v1
        with:
          artifacts: "build/app/outputs/flutter-apk/app-release.apk,build/app/outputs/bundle/release/app-release.aab"
          tag: ${{ env.RELEASE_TAG }}
          name: "Android Release ${{ env.RELEASE_TAG }}"
          body: |
            Android Release ${{ env.RELEASE_TAG }}
            Version: ${{ env.VERSION }}
            Build Number: ${{ github.run_number }}
            Release Type: ${{ github.event.inputs.release_type }}
            
            Automated release from GitHub Actions workflow.
          token: ${{ secrets.TOKEN }}
          prerelease: ${{ github.event.inputs.release_type != 'production' }}